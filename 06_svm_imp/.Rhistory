x2 = c(2,3,4)
x3 = c(2,3,5)
X = rbind(x1,x2,x3)
mat = X%*%X
cat(dim(mat))
x1 = c(1,2,3)
x2 = c(2,3,4)
x3 = c(2,3,5)
X = rbind(x1,x2,x3)
mat = X%*%X
cat(dim(mat))
View(mat)
size = 4
X = cbind(rnorm(mean=-1,sd=0.5,n=size), rnorm(mean=-1,sd=0.5, size))
X = rbind(X, cbind(rnorm(mean=1,sd=0.5,size), rnorm(mean=1,sd=0.5, size)))
# plot(X, pch=20, cex=3)
y = c(rep(+1,size), rep(-1,size))
plot(X, pch=20, cex=3, col=y+1)
plot(X, pch=20, cex=3, col=y+2)
#y summation, i, j
y_matrix = y%*%t(y)
dim(y_matrix)
# Medida da similaridade de um vetor com o outro
X_matrix = X%*%t(X)
dim(X_matrix)
View(X_matrix)
size = 4
X = cbind(rnorm(mean=-1,sd=0.5,n=size), rnorm(mean=-1,sd=0.5, size))
X = rbind(X, cbind(rnorm(mean=1,sd=0.5,size), rnorm(mean=1,sd=0.5, size)))
# plot(X, pch=20, cex=3)
y = c(rep(+1,size), rep(-1,size))
plot(X, pch=20, cex=3, col=y+1)
plot(X, pch=20, cex=3, col=y+2)
#y summation, i, j
y_matrix = y%*%t(y)
dim(y_matrix)
# Medida da similaridade de um vetor com o outro
X_matrix = X%*%t(X)
dim(X_matrix)
image(X_matrix)
size = 4
X = cbind(rnorm(mean=-1,sd=0.5,n=size), rnorm(mean=-1,sd=0.5, size))
X = rbind(X, cbind(rnorm(mean=1,sd=0.5,size), rnorm(mean=1,sd=0.5, size)))
# plot(X, pch=20, cex=3)
y = c(rep(+1,size), rep(-1,size))
plot(X, pch=20, cex=3, col=y+1)
plot(X, pch=20, cex=3, col=y+2)
#y summation, i, j
y_matrix = y%*%t(y)
dim(y_matrix)
# Medida da similaridade de um vetor com o outro
X_matrix = X%*%t(X)
dim(X_matrix)
#image(X_matrix)
Q = y_matrix%*%t(X)
image(Q)
size = 4
X = cbind(rnorm(mean=-1,sd=0.5,n=size), rnorm(mean=-1,sd=0.5, size))
X = rbind(X, cbind(rnorm(mean=1,sd=0.5,size), rnorm(mean=1,sd=0.5, size)))
# plot(X, pch=20, cex=3)
y = c(rep(+1,size), rep(-1,size))
plot(X, pch=20, cex=3, col=y+1)
plot(X, pch=20, cex=3, col=y+2)
#y summation, i, j
y_matrix = y%*%t(y)
dim(y_matrix)
# Medida da similaridade de um vetor com o outro
X_matrix = X%*%t(X)
dim(X_matrix)
#image(X_matrix)
Q = y_matrix%*%t(X_matrix)
image(Q)
size = 10
X = cbind(rnorm(mean=-1,sd=0.5,n=size), rnorm(mean=-1,sd=0.5, size))
X = rbind(X, cbind(rnorm(mean=1,sd=0.5,size), rnorm(mean=1,sd=0.5, size)))
# plot(X, pch=20, cex=3)
y = c(rep(+1,size), rep(-1,size))
plot(X, pch=20, cex=3, col=y+1)
plot(X, pch=20, cex=3, col=y+2)
#y summation, i, j
y_matrix = y%*%t(y)
dim(y_matrix)
# Medida da similaridade de um vetor com o outro
X_matrix = X%*%t(X)
dim(X_matrix)
#image(X_matrix)
Q = y_matrix%*%t(X_matrix)
image(Q)
size = 10
X = cbind(rnorm(mean=-1,sd=0.5,n=size), rnorm(mean=-1,sd=0.5, size))
X = rbind(X, cbind(rnorm(mean=1,sd=0.5,size), rnorm(mean=1,sd=0.5, size)))
# plot(X, pch=20, cex=3)
y = c(rep(+1,size), rep(-1,size))
plot(X, pch=20, cex=3, col=y+1)
plot(X, pch=20, cex=3, col=y+2)
#y summation, i, j
y_matrix = y%*%t(y)
dim(y_matrix)
# Medida da similaridade de um vetor com o outro
X_matrix = X%*%t(X)
dim(X_matrix)
#image(X_matrix)
Q = y_matrix%*%t(X_matrix)
dim(Q)
image(Q)
size = 10
X = cbind(rnorm(mean=-1,sd=0.5,n=size), rnorm(mean=-1,sd=0.5, size))
X = rbind(X, cbind(rnorm(mean=1,sd=0.5,size), rnorm(mean=1,sd=0.5, size)))
# plot(X, pch=20, cex=3)
y = c(rep(+1,size), rep(-1,size))
plot(X, pch=20, cex=3, col=y+1)
plot(X, pch=20, cex=3, col=y+2)
#y summation, i, j
y_matrix = y%*%t(y)
dim(y_matrix)
# Medida da similaridade de um vetor com o outro
X_matrix = X%*%t(X)
dim(X_matrix)
#image(X_matrix)
Q = y_matrix * t(X_matrix)
dim(Q)
image(Q)
Q = diag(2)
alphas = matrix(rnorm(mean=0,sd=1,n=100),ncol = 2)
alphas[1,]
Q = diag(2)
alphas = matrix(rnorm(mean=0,sd=1,n=100),ncol = 2)
alphas[1,]
View(alphas)
Q = diag(2)
alphas = matrix(rnorm(mean=0,sd=1,n=100),ncol = 2)
alphas[1,]
alphas[1,]%*%Qalphas[1,]
Q = diag(2)
alphas = matrix(rnorm(mean=0,sd=1,n=100),ncol = 2)
alphas[1,]
alphas[1,]%*%Q%*%alphas[1,]
Q = diag(2)
alphas = matrix(rnorm(mean=0,sd=1,n=100),ncol = 2)
alphas[1,]
res = alphas[1,]%*%Q%*%alphas[1,]
View(res)
size = 10
Q = diag(size)
alphas = matrix(rnorm(mean=0,sd=1,n=size),ncol = 2)
alphas[1,]
res = alphas[1,]%*%Q%*%alphas[1,]
View(res)
size = 10
Q = diag(size)
alphas = matrix(rnorm(mean=0,sd=1,n=size),ncol = 2)
alphas[1,]
res = t(alphas)%*%Q%*%alphas
size = 10
Q = diag(size)
alphas = matrix(rnorm(mean=0,sd=1,n=size),ncol = 2)
alphas[1,]
res = t(alphas)%*%Q%*%alphas
size = 10
Q = diag(size)
alphas = matrix(rnorm(mean=0,sd=1,n=size),ncol = 2)
alphas[1,]
res = t(alphas)%*%Q%*%alphas
size = 10
Q = diag(size)
alphas = matrix(rnorm(mean=0,sd=1,n=size),ncol = 1)
alphas[1,]
res = t(alphas)%*%Q%*%alphas
size = 10
Q = diag(size)
alphas = matrix(rnorm(mean=0,sd=1,n=size),ncol = 1)
res = t(alphas)%*%Q%*%alphas
size = 10
Q = diag(size)
alphas = matrix(rnorm(mean=0,sd=1,n=size),ncol = 1)
res = t(alphas)%*%Q%*%alphas
size = 10
Q = diag(size)
alphas = matrix(rnorm(mean=0,sd=1,n=size),ncol = 1)
res = t(alphas)%*%Q%*%alphas
size = 10
Q = diag(size)
alphas = matrix(rnorm(mean=0,sd=1,n=size),ncol = 1)
res = t(alphas)%*%Q%*%alphas
size = 10
Q = diag(size)
alphas = matrix(rnorm(mean=0,sd=1,n=size),ncol = 1)
res = t(alphas)%*%Q%*%alphas
size = 10
Q = diag(size)
alphas = matrix(rnorm(mean=0,sd=1,n=size),ncol = 1)
res = t(alphas)%*%Q%*%alphas
size = 10
Q = diag(size)
alphas = matrix(rnorm(mean=0,sd=1,n=size),ncol = 1)
res = t(alphas)%*%Q%*%alphas
size = 10
Q = diag(size)
alphas = matrix(rnorm(mean=0,sd=1,n=size),ncol = 1)
res = t(alphas)%*%Q%*%alphas
size = 10
Q = diag(size)
alphas = matrix(rnorm(mean=0,sd=1,n=size),ncol = 1)
res = t(alphas)%*%Q%*%alphas
image(Q)
# GRAM MATRIX
# something about: https://www.youtube.com/watch?v=3-Ds_K3p_Z8
size = 10
X = cbind(rnorm(mean=-1,sd=0.5,n=size), rnorm(mean=-1,sd=0.5, size))
X = rbind(X, cbind(rnorm(mean=1,sd=0.5,size), rnorm(mean=1,sd=0.5, size)))
# plot(X, pch=20, cex=3)
y = c(rep(+1,size), rep(-1,size))
plot(X, pch=20, cex=3, col=y+1)
plot(X, pch=20, cex=3, col=y+2)
#y summation, i, j
y_matrix = y%*%t(y)
dim(y_matrix)
# Medida da similaridade de um vetor com o outro
X_matrix = X%*%t(X)
dim(X_matrix)
#image(X_matrix)
Q = y_matrix * t(X_matrix)
dim(Q)
image(Q)
size = 10
X = cbind(rnorm(mean=-1,sd=0.5,n=size), rnorm(mean=-1,sd=0.5, size))
X = rbind(X, cbind(rnorm(mean=1,sd=0.5,size), rnorm(mean=1,sd=0.5, size)))
# plot(X, pch=20, cex=3)
y = c(rep(+1,size), rep(-1,size))
plot(X, pch=20, cex=3, col=y+1)
plot(X, pch=20, cex=3, col=y+2)
#y summation, i, j
y_matrix = y%*%t(y)
dim(y_matrix)
# Medida da similaridade de um vetor com o outro
X_matrix = X%*%t(X)
dim(X_matrix)
#image(X_matrix)
Q = y_matrix * t(X_matrix)
dim(Q)
image(Q)
# Valores característicos da matriz Q
# eigen(característica)
# eigenvalue : O quanto ocorre de "encolhimento" "esticamento" da transformação linear resultante daquele vetor
# eigenvector: Para onde é esticada a transformação linear
eig = eigen(Q)
eig
size = 2
X = cbind(rnorm(mean=-1,sd=0.5,n=size), rnorm(mean=-1,sd=0.5, size))
X = rbind(X, cbind(rnorm(mean=1,sd=0.5,size), rnorm(mean=1,sd=0.5, size)))
# plot(X, pch=20, cex=3)
y = c(rep(+1,size), rep(-1,size))
plot(X, pch=20, cex=3, col=y+1)
plot(X, pch=20, cex=3, col=y+2)
#y summation, i, j
y_matrix = y%*%t(y)
dim(y_matrix)
# Medida da similaridade de um vetor com o outro
X_matrix = X%*%t(X)
dim(X_matrix)
#image(X_matrix)
Q = y_matrix * t(X_matrix)
dim(Q)
image(Q)
# Valores característicos da matriz Q
# eigen(característica)
# eigenvalue : O quanto ocorre de "encolhimento" "esticamento" da transformação linear resultante daquele vetor
# eigenvector: Para onde é esticada a transformação linear
eig = eigen(Q)
eig
size = 10
X = cbind(rnorm(mean=-1,sd=0.5,n=size), rnorm(mean=-1,sd=0.5, size))
X = rbind(X, cbind(rnorm(mean=1,sd=0.5,size), rnorm(mean=1,sd=0.5, size)))
# plot(X, pch=20, cex=3)
y = c(rep(+1,size), rep(-1,size))
plot(X, pch=20, cex=3, col=y+1)
plot(X, pch=20, cex=3, col=y+2)
#y summation, i, j
y_matrix = y%*%t(y)
dim(y_matrix)
# Medida da similaridade de um vetor com o outro
X_matrix = X%*%t(X)
dim(X_matrix)
#image(X_matrix)
Q = y_matrix * t(X_matrix)
dim(Q)
image(Q)
# Valores característicos da matriz Q
# eigen(característica)
# eigenvalue : O quanto ocorre de "encolhimento" "esticamento" da transformação linear resultante daquele vetor
# eigenvector: Para onde é esticada a transformação linear
eig = eigen(Q)
eig$values
size = 10
X = cbind(rnorm(mean=-1,sd=0.5,n=size), rnorm(mean=-1,sd=0.5, size))
X = rbind(X, cbind(rnorm(mean=1,sd=0.5,size), rnorm(mean=1,sd=0.5, size)))
# plot(X, pch=20, cex=3)
y = c(rep(+1,size), rep(-1,size))
plot(X, pch=20, cex=3, col=y+1)
plot(X, pch=20, cex=3, col=y+2)
#y summation, i, j
y_matrix = y%*%t(y)
dim(y_matrix)
# Medida da similaridade de um vetor com o outro
X_matrix = X%*%t(X)
dim(X_matrix)
#image(X_matrix)
Q = y_matrix * t(X_matrix)
dim(Q)
image(Q)
# Valores característicos da matriz Q
# eigen(característica)
# eigenvalue : O quanto ocorre de "encolhimento" "esticamento" da transformação linear resultante daquele vetor
# eigenvector: Para onde é esticada a transformação linear
eig = eigen(Q)
# Decomposicao em eigenvalues e eigenvectors
eig$values
# Decomposicao de cholesky
chol(Q)
size = 10
X = cbind(rnorm(mean=-1,sd=0.5,n=size), rnorm(mean=-1,sd=0.5, size))
X = rbind(X, cbind(rnorm(mean=1,sd=0.5,size), rnorm(mean=1,sd=0.5, size)))
# plot(X, pch=20, cex=3)
y = c(rep(+1,size), rep(-1,size))
plot(X, pch=20, cex=3, col=y+1)
plot(X, pch=20, cex=3, col=y+2)
#y summation, i, j
y_matrix = y%*%t(y)
dim(y_matrix)
# Medida da similaridade de um vetor com o outro
X_matrix = X%*%t(X)
dim(X_matrix)
#image(X_matrix)
Q = y_matrix * t(X_matrix)
dim(Q)
image(Q)
# Valores característicos da matriz Q
# eigen(característica)
# eigenvalue : O quanto ocorre de "encolhimento" "esticamento" da transformação linear resultante daquele vetor
# eigenvector: Para onde é esticada a transformação linear
eig = eigen(Q)
# Decomposicao em eigenvalues e eigenvectors
eig$values
# Decomposicao de cholesky
chol(Q + 1e7*diag(size))
dim(X)
dim(X)[0]
dim(X)[0,]
dim(X)[1]
half_size = 10
X = cbind(rnorm(mean=-1,sd=0.5,n=half_size), rnorm(mean=-1,sd=0.5, half_size))
X = rbind(X, cbind(rnorm(mean=1,sd=0.5,half_size), rnorm(mean=1,sd=0.5, half_size)))
size = dim(X)[1]
# plot(X, pch=20, cex=3)
y = c(rep(+1,half_size), rep(-1,half_size))
plot(X, pch=20, cex=3, col=y+1)
plot(X, pch=20, cex=3, col=y+2)
#y summation, i, j
y_matrix = y%*%t(y)
dim(y_matrix)
# Medida da similaridade de um vetor com o outro
X_matrix = X%*%t(X)
dim(X_matrix)
#image(X_matrix)
Q = y_matrix * t(X_matrix)
dim(Q)
image(Q)
# Valores característicos da matriz Q
# eigen(característica)
# eigenvalue : O quanto ocorre de "encolhimento" "esticamento" da transformação linear resultante daquele vetor
# eigenvector: Para onde é esticada a transformação linear
eig = eigen(Q)
# Decomposicao em eigenvalues e eigenvectors
eig$values
# Decomposicao de cholesky
chol(Q + 1e7*diag(size))
half_size = 2
X = cbind(rnorm(mean=-1,sd=0.5,n=half_size), rnorm(mean=-1,sd=0.5, half_size))
X = rbind(X, cbind(rnorm(mean=1,sd=0.5,half_size), rnorm(mean=1,sd=0.5, half_size)))
size = dim(X)[1]
# plot(X, pch=20, cex=3)
y = c(rep(+1,half_size), rep(-1,half_size))
plot(X, pch=20, cex=3, col=y+1)
plot(X, pch=20, cex=3, col=y+2)
#y summation, i, j
y_matrix = y%*%t(y)
dim(y_matrix)
# Medida da similaridade de um vetor com o outro
X_matrix = X%*%t(X)
dim(X_matrix)
#image(X_matrix)
Q = y_matrix * t(X_matrix)
dim(Q)
image(Q)
# Valores característicos da matriz Q
# eigen(característica)
# eigenvalue : O quanto ocorre de "encolhimento" "esticamento" da transformação linear resultante daquele vetor
# eigenvector: Para onde é esticada a transformação linear
eig = eigen(Q)
# Decomposicao em eigenvalues e eigenvectors
eig$values
# Decomposicao de cholesky
chol(Q + 1e7*diag(size))
half_size = 2
X = cbind(rnorm(mean=-1,sd=0.5,n=half_size), rnorm(mean=-1,sd=0.5, half_size))
X = rbind(X, cbind(rnorm(mean=1,sd=0.5,half_size), rnorm(mean=1,sd=0.5, half_size)))
size = dim(X)[1]
# plot(X, pch=20, cex=3)
y = c(rep(+1,half_size), rep(-1,half_size))
plot(X, pch=20, cex=3, col=y+1)
plot(X, pch=20, cex=3, col=y+2)
#y summation, i, j
y_matrix = y%*%t(y)
dim(y_matrix)
# Medida da similaridade de um vetor com o outro
X_matrix = X%*%t(X)
dim(X_matrix)
#image(X_matrix)
Q = y_matrix * t(X_matrix)
dim(Q)
image(Q)
# Valores característicos da matriz Q
# eigen(característica)
# eigenvalue : O quanto ocorre de "encolhimento" "esticamento" da transformação linear resultante daquele vetor
# eigenvector: Para onde é esticada a transformação linear
eig = eigen(Q)
# Decomposicao em eigenvalues e eigenvectors
eig$values
# Decomposicao de cholesky
chol(Q + -1e7*diag(size))
half_size = 2
X = cbind(rnorm(mean=-1,sd=0.5,n=half_size), rnorm(mean=-1,sd=0.5, half_size))
X = rbind(X, cbind(rnorm(mean=1,sd=0.5,half_size), rnorm(mean=1,sd=0.5, half_size)))
size = dim(X)[1]
# plot(X, pch=20, cex=3)
y = c(rep(+1,half_size), rep(-1,half_size))
plot(X, pch=20, cex=3, col=y+1)
plot(X, pch=20, cex=3, col=y+2)
#y summation, i, j
y_matrix = y%*%t(y)
dim(y_matrix)
# Medida da similaridade de um vetor com o outro
X_matrix = X%*%t(X)
dim(X_matrix)
#image(X_matrix)
Q = y_matrix * t(X_matrix)
dim(Q)
image(Q)
# Valores característicos da matriz Q
# eigen(característica)
# eigenvalue : O quanto ocorre de "encolhimento" "esticamento" da transformação linear resultante daquele vetor
# eigenvector: Para onde é esticada a transformação linear
eig = eigen(Q)
# Decomposicao em eigenvalues e eigenvectors
eig$values
# Decomposicao de cholesky
chol(Q + 1e-7*diag(size))
half_size = 2
X = cbind(rnorm(mean=-1,sd=0.5,n=half_size), rnorm(mean=-1,sd=0.5, half_size))
X = rbind(X, cbind(rnorm(mean=1,sd=0.5,half_size), rnorm(mean=1,sd=0.5, half_size)))
size = dim(X)[1]
# plot(X, pch=20, cex=3)
y = c(rep(+1,half_size), rep(-1,half_size))
plot(X, pch=20, cex=3, col=y+1)
plot(X, pch=20, cex=3, col=y+2)
#y summation, i, j
y_matrix = y%*%t(y)
dim(y_matrix)
# Medida da similaridade de um vetor com o outro
X_matrix = X%*%t(X)
dim(X_matrix)
#image(X_matrix)
Q = y_matrix * t(X_matrix)
dim(Q)
image(Q)
# Valores característicos da matriz Q
# eigen(característica)
# eigenvalue : O quanto ocorre de "encolhimento" "esticamento" da transformação linear resultante daquele vetor
# eigenvector: Para onde é esticada a transformação linear
eig = eigen(Q)
# Decomposicao em eigenvalues e eigenvectors
eig$values
# Decomposicao de cholesky
chol(Q + 1e-3*diag(size))
half_size = 2
X = cbind(rnorm(mean=-1,sd=0.5,n=half_size), rnorm(mean=-1,sd=0.5, half_size))
X = rbind(X, cbind(rnorm(mean=1,sd=0.5,half_size), rnorm(mean=1,sd=0.5, half_size)))
size = dim(X)[1]
# plot(X, pch=20, cex=3)
y = c(rep(+1,half_size), rep(-1,half_size))
plot(X, pch=20, cex=3, col=y+1)
plot(X, pch=20, cex=3, col=y+2)
#y summation, i, j
y_matrix = y%*%t(y)
dim(y_matrix)
# Medida da similaridade de um vetor com o outro
X_matrix = X%*%t(X)
dim(X_matrix)
#image(X_matrix)
Q = y_matrix * t(X_matrix)
dim(Q)
image(Q)
# Valores característicos da matriz Q
# eigen(característica)
# eigenvalue : O quanto ocorre de "encolhimento" "esticamento" da transformação linear resultante daquele vetor
# eigenvector: Para onde é esticada a transformação linear
eig = eigen(Q)
# Decomposicao em eigenvalues e eigenvectors
eig$values
# Decomposicao de cholesky
Q_approx = chol(Q + 1e-3*diag(size))
Q_approx
